//
//  MemberMainViewController.m
//  weidong
//
//  Created by zhccc on 2017/9/29.
//  Copyright © 2017年 zhccc. All rights reserved.
//

#import "MemberMainViewController.h"
#import "LoginViewController.h"
#import "MemberHeaderView.h"
#import "MemberFunctionView.h"
#import "MemberTableSectionView.h"
#import "MemberOrderCell.h"
#import "MemberMessageCell.h"
#import "MemberToolsCell.h"
#import "MemberToolsCell.h"
#import "MemberLogoutCell.h"
#import "LogoutRequest.h"
#import "GetMemberInfoRequest.h"

@interface MemberMainViewController () <UITableViewDelegate, UITableViewDataSource, MemberLogoutDelegate>
@property (weak, nonatomic) IBOutlet UITableView *table;

@end

@implementation MemberMainViewController {
//    UITableView *table;
    UIView *tableHeader;
    MemberHeaderView *headerView;
    MemberFunctionView *functionView;
    MemberLoginInfo *memInfo;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    self.title = @"会员中心";
    
    self.view.backgroundColor = [UIColor grayColor];
    [self initTableView];
}

- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    
    if (![Util userIsLogin] ) {
        [self openLoginController];
        return;
    }

    [self getMemberInfo];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - 界面初始化
- (void)initTableView {
    _table.rowHeight = UITableViewAutomaticDimension;
    _table.estimatedRowHeight = 100;
    _table.tableFooterView = nil;
    
    //Table的顶部试图
    tableHeader = [[UIView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_WIDTH * 0.6 + 20)];
    _table.tableHeaderView = tableHeader;
    
    //1. 用户头像昵称视图
    headerView = [[MemberHeaderView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_WIDTH * 0.4)];
    //2. 4个功能按钮：商品收藏、到货通知、……
    functionView = [[MemberFunctionView alloc] initWithFrame:CGRectMake(0, SCREEN_WIDTH * 0.4, SCREEN_WIDTH, SCREEN_WIDTH * 0.2 + 20)];
    [tableHeader addSubview:headerView];
    [tableHeader addSubview:functionView];
    
    [_table registerNib:[UINib nibWithNibName:@"MemberOrderCell" bundle:nil] forCellReuseIdentifier:ORDER_CELLID];
    [_table registerNib:[UINib nibWithNibName:@"MemberMessageCell" bundle:nil] forCellReuseIdentifier:MESSAGE_CELLID];
    [_table registerNib:[UINib nibWithNibName:@"MemberToolsCell" bundle:nil] forCellReuseIdentifier:TOOLS_CELLID];
    [_table registerNib:[UINib nibWithNibName:@"MemberLogoutCell" bundle:nil] forCellReuseIdentifier:LOGOUT_CELLID];
}

- (void)openLoginController {
    LoginViewController *loginVC = [LoginViewController new];
    loginVC.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:loginVC animated:NO];
}

- (void)setupViewWithMemberInfo:(MemberLoginInfo *)memberInfo {
    memInfo = memberInfo;
    
    [self.table reloadData];
    [headerView setupWithUserName:[Util getUserName] Ranking:memberInfo.memberRankName];
}

#pragma mark - 获取服务端数据
- (void)getMemberInfo {
    GetMemberInfoRequest *request = [GetMemberInfoRequest new];
    [request excuteRequest:^(BOOL isOK, MemberLoginInfo * _Nullable memberInfo, NSString * _Nullable errorMsg) {
        if (isOK) {
            [self setupViewWithMemberInfo:memberInfo];
        }
        else {
            [SVProgressHUD showErrorWithStatus:@"获取个人信息失败"];
        }
    }];
}


#pragma mark - tableViewDelegate
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return 6;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    if (section >= 3 && section <=4) {
        return 0;
    }
    
    return 1;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    if (section <= 2) {
        return 36;
    }
    return 40;
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {
    if (section != 2) {
        return 8;
    }
    else {
        return 24;
    }
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {
    MemberTableSectionView *sectionView = [MemberTableSectionView new];
    switch (section) {
        case 0:
            [sectionView setupWithTitle:@"我的订单" Image:@"default" Subtitle:@"查看全部订单" TintColor:COLOR_0];
            break;
            
        case 1:
            [sectionView setupWithTitle:@"消息盒子" Image:@"default" Subtitle:@"" TintColor:COLOR_1];
            break;
            
        case 2:
            [sectionView setupWithTitle:@"必备工具" Image:@"default" Subtitle:@"" TintColor:COLOR_2];
            break;
            
        case 3:
            [sectionView setupWithTitle:@"设置" Image:@"default" Subtitle:@"收货地址管理" TintColor:nil];
            break;
            
        case 4:
            [sectionView setupWithTitle:@"个人资料" Image:@"default" Subtitle:@"个人账户管理" TintColor:nil];
            break;
            
        case 5:
            [sectionView setupWithTitle:@"修改密码" Image:@"default" Subtitle:@"修改密码" TintColor:nil];
            break;
            
        default:
            break;
    }
    return sectionView;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    NSInteger section = indexPath.section;
    
    switch (section) {
        case 0: {
            MemberOrderCell *cell = [tableView dequeueReusableCellWithIdentifier:ORDER_CELLID forIndexPath:indexPath];
            return cell;
            break;
        }
        case 1: {
            MemberMessageCell *cell = [tableView dequeueReusableCellWithIdentifier:MESSAGE_CELLID forIndexPath:indexPath];
            return cell;
            break;
        }
        case 2: {
            MemberToolsCell *cell = [tableView dequeueReusableCellWithIdentifier:TOOLS_CELLID forIndexPath:indexPath];
            return cell;
            break;
        }
        case 5: {
            MemberLogoutCell *cell = [tableView dequeueReusableCellWithIdentifier:LOGOUT_CELLID forIndexPath:indexPath];
            cell.delegate = self;
            return cell;
            break;
        }
            
        default:{
            return nil;
        }
    }
}


#pragma mark - 自定义控件Delegate



- (void)logoutAction {
    [SVProgressHUD showWithStatus:@"正在退出"];
    LogoutRequest *request = [LogoutRequest new];
    [request excuteRequest:^(BOOL isOK, NSString * _Nullable errorMsg) {
        [SVProgressHUD dismiss];
        if (isOK) {
            [SVProgressHUD showSuccessWithStatus:@"退出成功"];
            
            [Util clearLoginInfo];
            [self openLoginController];
        }
        else {
            [SVProgressHUD showErrorWithStatus:[NSString stringWithFormat:@"退出失败：%@", errorMsg]];
        }
    }];
}

@end

