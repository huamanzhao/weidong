//
//  HomePageViewController.m
//  weidong
//
//  Created by zhccc on 2017/9/29.
//  Copyright © 2017年 zhccc. All rights reserved.
//

#import "HomePageViewController.h"
#import "Util.h"
#import "Constants.h"
#import "LoopView.h"
#import "BannerView.h"
#import "CollectionTableViewCell.h"
#import "PromotionTableViewCell.h"
#import "ScrollTableViewCell.h"
#import "CategoryTableViewCell.h"
#import "LoginViewController.h"
#import "ProductListViewController.h"
#import "AdvertisementViewController.h"

#import "ProductSearchRequest.h"
#import "GetHotSearchRequest.h"
#import "GetBannerAdsRequest.h"
#import "GetPromotionRequest.h"
#import "GetHomeCategoryRequest.h"

#import "LoginRequest.h"
#import "CheckVersionRequest.h"
#import "RefreshTokenReqeust.h"
#import "GetProductCommentRequest.h"
#import "GetProductConsultRequest.h"


@interface HomePageViewController () <UITableViewDelegate, UITableViewDataSource, BannerViewDelegate, LoopDelegate, ScrollCellDelegate, CategoryCellDelegate>
@property (weak, nonatomic) IBOutlet UITableView *table;

@end

@implementation HomePageViewController {
    UITextField *searchText;
    HeaderSearchView *searchView;
    BannerView *banner;
    
    NSArray *searchList;
    NSArray *hotKeyList;
    NSArray *promotionList;
    NSArray *hotspotAdList;
    NSArray *categoryList;
    
    //网络请求是否完毕
    BOOL getPromotionsDone;
    BOOL getHotpotAdsDone;
    BOOL getCategoriesDone;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    
    [self initNavigationBar];
    [self initTableView];
    
    //初始置为未完毕
    getPromotionsDone = NO;
    getHotpotAdsDone  = NO;
    getCategoriesDone= NO;
    
    categoryList = [NSArray new];
    
    //获取热词列表
    [self getHotSearchKeywords];
    [self getTopBannerAdList];
    [self getPromotionList];
    [self getProductCategoryList];
    [self getHotspotAdList];
}

- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
}

- (void)viewDidAppear:(BOOL)animated {
    [super viewDidAppear:animated];
    //ZC_DEBUG
    [self testApi_2];
}

- (void)viewWillDisappear:(BOOL)animated {
    [super viewWillDisappear:animated];
    
    if (searchView) {
        [searchView dismiss];
        searchView = nil;   //避免从其他界面返回后，此界面出不来
    }
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

- (void)initNavigationBar {
    [self initNaviBarLeftItem];
    [self initNaviBarRightItem];
    [self initNaviBarTitle];
}

- (void)initNaviBarLeftItem {
    UIBarButtonItem *item = [[UIBarButtonItem alloc] initWithImage:UIImageWithName(@"navi_more") style:UIBarButtonItemStylePlain target:self action:@selector(naviLeftBarItemPressed)];
    [item setTintColor:[UIColor grayColor]];
    self.navigationItem.leftBarButtonItem = item;
}

- (void)initNaviBarRightItem {
    UIBarButtonItem *loginItem = [[UIBarButtonItem alloc] initWithTitle:@"登录" style:UIBarButtonItemStylePlain target:self action:@selector(naviRightBarItemPressed)];
    [loginItem setTintColor:[UIColor grayColor]];
    self.navigationItem.rightBarButtonItem = loginItem;
}

- (void)initNaviBarTitle {
    CGFloat titleHeight = 32;
    CGFloat titleWidth  = SCREEN_WIDTH * 0.7;
    UIView *bgView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, titleWidth, titleHeight)];
    bgView.backgroundColor = [UIColor whiteColor];
    bgView.layer.borderColor = [UIColor grayColor].CGColor;
    bgView.layer.borderWidth = 1.0;
    bgView.layer.cornerRadius = 4;
    
    CGFloat textLeadingMargin = 8.0;
    CGFloat textWidth  = titleWidth - textLeadingMargin;
    CGFloat textHeight = titleHeight;
    searchText = [[UITextField alloc] initWithFrame:CGRectMake(textLeadingMargin, 0, textWidth, textHeight)];
    searchText.placeholder = @"搜索 商品/店铺";
    searchText.font = [UIFont systemFontOfSize:16.0];
    searchText.textColor = [UIColor grayColor];
    [bgView addSubview:searchText];
    
    CGFloat imageTopMargin = 6;
    CGFloat imageLength = titleHeight - imageTopMargin * 2;
    CGFloat imageLeadingMagin = titleWidth - 8 - imageLength;
    UIImageView *imageView = [[UIImageView alloc] initWithFrame:CGRectMake(imageLeadingMagin, imageTopMargin, imageLength, imageLength)];
    imageView.image = UIImageWithName(@"navi_search");
    [imageView setTintColor:[UIColor grayColor]];
    [bgView addSubview:imageView];

    UIButton *maskBtn = [[UIButton alloc] initWithFrame:CGRectMake(0, 0, titleWidth, titleHeight)];
    maskBtn.backgroundColor = [UIColor clearColor];
    [maskBtn addTarget:self action:@selector(showProductSearchView) forControlEvents:UIControlEventTouchUpInside];
    [bgView addSubview:maskBtn];
    
    self.navigationItem.titleView = bgView;
}

- (void)initTableView {
    self.automaticallyAdjustsScrollViewInsets = NO;
    _table.estimatedRowHeight = 100;
    _table.rowHeight = UITableViewAutomaticDimension;
    
    banner = [[BannerView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_WIDTH * 9 / 25)];
    banner.delegate = self;
    _table.tableHeaderView = banner;
    
    [_table registerNib:[UINib nibWithNibName:@"CollectionTableViewCell" bundle:nil] forCellReuseIdentifier:COLLECTION_CELL_ID];
    [_table registerNib:[UINib nibWithNibName:@"PromotionTableViewCell" bundle:nil] forCellReuseIdentifier:RECOMMEND_CELL_ID];
    [_table registerNib:[UINib nibWithNibName:@"ScrollTableViewCell" bundle:nil] forCellReuseIdentifier:SCROLL_CELL_ID];
    [_table registerNib:[UINib nibWithNibName:@"CategoryTableViewCell" bundle:nil] forCellReuseIdentifier:CATEGORY_CELL_ID];
}

- (void)naviLeftBarItemPressed {
    [self showProductSearchView];
}

- (void)showProductSearchView {
    if (searchView == nil) {
        searchView = [[[NSBundle mainBundle] loadNibNamed:@"HeaderSearchView" owner:self options:nil] lastObject];
        searchView.delegate = self;
        [searchView showSearchViewWithTitles:hotKeyList];
    }
}

- (void)naviRightBarItemPressed {
    self.tabBarController.selectedIndex = 3;
}

//根据所有网络请求是否已完成来刷新table数据
- (void)reloadTableIfFinished {
    if (getPromotionsDone && getHotpotAdsDone && getCategoriesDone) {
        [_table reloadData];
    }
}

//MARK: 各种Delegate
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return 3 + [categoryList count];
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return 1;
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {
    if (section < 3) {
        return nil;
    }
    
    //产品分类标题
    return [self getCategoryHeaderView:(section - 3)];
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    if (section < 3) {
        return 0.01;
    }
    
    return 40;
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {
    return 0.01;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    NSInteger section = indexPath.section;
    
    if (section == 0) {
        CollectionTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:COLLECTION_CELL_ID forIndexPath:indexPath];
        
        return cell;
    }
    else if (section == 1) {
        PromotionTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:RECOMMEND_CELL_ID forIndexPath:indexPath];
        cell.delegate = self;
        [cell showPromotionList:promotionList];
        
        return cell;
    }
    else if (section == 2) {
        ScrollTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:SCROLL_CELL_ID forIndexPath:indexPath];
        cell.delegate = self;
        [cell setupByAdList:hotspotAdList];
        
        return cell;
    }
    else {
        CategoryTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CATEGORY_CELL_ID forIndexPath:indexPath];
        cell.delegate = self;
        NSInteger section = indexPath.section;
        NSInteger index = section - 3;
        CategoryInfo *category = [categoryList objectAtIndex:index];
        [cell setupByCategory:category];
        
        return cell;
    }
    
    return nil;
}

- (UIView *)getCategoryHeaderView: (NSInteger)index {
    UIView *header = [[UIView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 40)];
    header.backgroundColor = [UIColor whiteColor];
    UILabel *titleLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 40)];
    titleLabel.textAlignment = NSTextAlignmentCenter;
    titleLabel.font = [UIFont systemFontOfSize:16.0];
    titleLabel.textColor = ORANGE_COLOR;
    [header addSubview:titleLabel];
    
    CategoryInfo *category = [categoryList objectAtIndex:index];
    titleLabel.text = category.name;
    
    [header addSubview:titleLabel];
    
    return header;
}

//HeaderSearchViewDelegate
- (void)productSearch:(NSString *)keyStr {
    [searchView dismiss];
    
    ProductListViewController *listVC = [ProductListViewController new];
    listVC.searchKey = keyStr;
    listVC.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:listVC animated:YES];
}

//打开广告详情界面
- (void)selectAdWithId: (AdInfo *)adInfo {
    AdvertisementViewController *adverticeVC = [AdvertisementViewController new];
    adverticeVC.articleId = adInfo.articleId;
    adverticeVC.title = adInfo.title;
    adverticeVC.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:adverticeVC animated:YES];
}

//促销部分点击回调
- (void)selectPromotionWithId: (NSString *)Id {
    //TODO 打开促销视图
}

//产品列表回调
- (void)selectProductWithID:(NSString *)productId {
    //TODO 打开产品列表界面
}

//MARK: 服务端请求
//获取搜索热词
- (void)getHotSearchKeywords {
    GetHotSearchRequest *request = [GetHotSearchRequest new];
    [request excuteRequst:^(Boolean isOK, NSArray * _Nullable list, NSString * _Nullable errorMsg) {
        hotKeyList = list;
    }];
}

//获取顶部滚动广告列表
- (void)getTopBannerAdList {
    GetBannerAdsRequest *request = [GetBannerAdsRequest new];
    request.adPosition = AdPostion_Banner;
    [request excuteRequest:^(BOOL isOK, GetBannerAdsResponse * _Nullable response, NSString * _Nullable errorMsg) {
        if (isOK) {
            NSArray *adList = [response.list copy];
            [banner showViewWithBanners:adList];
        }
        else {
            [SVProgressHUD showErrorWithStatus:@"获取广告轮播列表失败"];
        }
    }];
}

//获取促销列表
- (void)getPromotionList {
    getPromotionsDone = NO;
    GetPromotionRequest *request = [GetPromotionRequest new];
    [request excuteRequest:^(BOOL isOK, GetPromotionResponse * _Nullable response, NSString * _Nullable errorMsg) {
        getPromotionsDone = YES;
        if (isOK) {
            promotionList = [response.list copy];
            [self reloadTableIfFinished];
        }
        else {
            [SVProgressHUD showErrorWithStatus:@"获取促销列表失败"];
        }
    }];
}

- (void)extracted:(GetBannerAdsRequest *)request {
    [request excuteRequest:^(BOOL isOK, GetBannerAdsResponse * _Nullable response, NSString * _Nullable errorMsg) {
        getHotpotAdsDone = YES;
        if (isOK) {
            hotspotAdList = [response.list copy];
            [self reloadTableIfFinished];
        }
        else {
            [SVProgressHUD showErrorWithStatus:@"获取热点广告列表失败"];
        }
    }];
}

//获取中间热点广告
- (void)getHotspotAdList {
    getHotpotAdsDone = NO;
    GetBannerAdsRequest *request = [GetBannerAdsRequest new];
    request.adPosition = AdPostion_Hotspot;
    [self extracted:request];
}

//获取商品分类列表
- (void)getProductCategoryList {
    getCategoriesDone = NO;
    GetHomeCategoryRequest *request = [GetHomeCategoryRequest new];
    [request excuteRequest:^(BOOL isOK, GetCategoryResponse * _Nullable response, NSString * _Nullable errorMsg) {
        getCategoriesDone = YES;
        if (isOK) {
            categoryList = [response.list copy];
            [self reloadTableIfFinished];
        }
        else {
            [SVProgressHUD showErrorWithStatus:@"获取首页商品分类列表失败"];
        }
    }];
}

- (void)testApi {
    LoginRequest *request = [LoginRequest new];
    request.login_name = @"zhouchao";
    request.password = @"123123";
    request.phone_model = [Util getDeviceVersion];
    request.phone_system = [Util getSystemVerison];
    request.login_imei = [Util getDeviceUUID];
    request.login_time = @"201709311730";
    [request excuteRequst:^(Boolean isOK, NSString *token, NSString *expireTime, NSString * _Nullable errorMsg) {
        NSLog(@"LoginRequest token:%@, expireTime%@",token, expireTime);
        
        [Util updateLoginInfo:@"zhouchao" Token:token ExpireTime:expireTime];
        
        RefreshTokenReqeust *request1 = [RefreshTokenReqeust new];
        [request1 excuteRequst:^(Boolean isOK, NSString * _Nullable token, NSString * _Nullable expireTime, NSString * _Nullable errorMsg) {
            NSLog(@"RefreshTokenReqeust token:%@, expireTime%@",token, expireTime);
        }];
    }];
    
    
}

- (void)testApi_1 {
    CheckVersionRequest *request = [CheckVersionRequest new];
    request.version_code = [Util getAppVersion];
    [request excuteRequst:^(Boolean isOK, CheckVersionResponse * _Nullable response, NSString * _Nullable errorMsg) {
        NSLog(@"CheckVersionRequest: %@", response.version);
    }];
}

- (void)testApi_2 {
    GetProductCommentRequest *request = [GetProductCommentRequest new];
    request.productId = @"651";
    [request excuteRequest:^(BOOL isOK, GetProductCommentResponse * _Nullable response, NSString * _Nullable errorMsg) {
        if (isOK) {
            NSLog(@"adf");
        }
    }];
}

- (void)testApi_3 {
    GetProductConsultRequest *request = [GetProductConsultRequest new];
    request.productId = @"651";
    [request excuteRequest:^(BOOL isOK, GetProductConsultResponse * _Nullable response, NSString * _Nullable errorMsg) {
        if (isOK) {
            NSLog(@"qwe");
        }
    }];
}


@end
