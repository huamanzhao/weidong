//
//  ProductDetailViewController.m
//  weidong
//
//  Created by zhccc on 2017/10/19.
//  Copyright © 2017年 zhccc. All rights reserved.
//

#import "ProductDetailViewController.h"
#import "GetProductDetailRequest.h"
#import "GetProductCommentRequest.h"
#import "GetProductConsultRequest.h"
#import "ProductMainView.h"
#import "ProductDetailView.h"
#import "ProductCommentsView.h"
#import "ProductConsultsView.h"
#import "ProductSpecificationView.h"
#import "ProductDetail.h"
#import "CommentInfo.h"

@interface ProductDetailViewController () <ProductMainPageDelegate, ProductSpecificationDelegate>

@end

@implementation ProductDetailViewController {
    ProductDetail *detail;
    NSArray *commentList;
    NSArray *consulations;
    
    NSInteger currState;    //0-商品首页；1-商品详情；2-商品评价；3-咨询界面
    
    ProductMainView *homeView;
    ProductDetailView *detailView;
    ProductCommentsView *commentView;
    ProductConsultsView *consultView;
    ProductSpecificationView *specView;
    
    CGFloat transHeight;
    CGFloat specHeight;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    self.title = @"商品信息";
    [self initNaviBackButton];
    currState = 0;
    
    [self initSubViews];
}

- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    
    [self getProductDetailInfo];
    [self getProductCommentsList];
    [self getProductConsulations];
}

- (void)viewDidAppear:(BOOL)animated {
    [super viewDidAppear:animated];
    
    transHeight = self.mainView.bounds.size.height;
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

- (void)initSubViews {
    [_homepageBtn adjustItemsUpDown];
    [_favoriteBtn adjustItemsUpDown];
    [_cartBtn adjustItemsUpDown];
    [self setupHeaderViews];
    
    homeView = [[ProductMainView alloc] initWithFrame:self.mainView.bounds];
    homeView.delegate = self;
    [self.mainView addSubview:homeView];
    self.mainView.clipsToBounds = YES;
    
    _bottomView.layer.shadowColor = [UIColor grayColor].CGColor;
    _bottomView.layer.shadowRadius = 4.0;
    _bottomView.layer.shadowOpacity = 0.5;
    _bottomView.layer.shadowOffset = CGSizeMake(4, -4);
}

//MARK: 网络请求
- (void)getProductDetailInfo {
    GetProductDetailRequest *request = [GetProductDetailRequest new];
    request.productId = self.productId;
    [request excuteRequest:^(BOOL isOK, GetProductDetailResponse * _Nullable response, NSString * _Nullable errorMsg) {
        if (isOK) {
            detail = response.detail;
            [homeView setupWithProduct:detail];
            if (detailView) {
                [detailView setupWithProductDetail:detail];
            }
            if (specView) {
                [specView setupWithProduct:detail];
            }
        }
    }];
}

//获取评论列表
- (void)getProductCommentsList {
    GetProductCommentRequest *request = [GetProductCommentRequest new];
    request.productId = self.productId;
    [request excuteRequest:^(BOOL isOK, GetProductCommentResponse * _Nullable response, NSString * _Nullable errorMsg) {
        if (isOK) {
            commentList = response.list;
            if (commentView && commentList && [commentList count]) {
                [commentView reloadTableDataWith:commentList];
            }
        }
    }];
}

//获取咨询列表
- (void)getProductConsulations {
    GetProductConsultRequest *request = [GetProductConsultRequest new];
    request.productId = @"651";
    [request excuteRequest:^(BOOL isOK, GetProductConsultResponse * _Nullable response, NSString * _Nullable errorMsg) {
        if (isOK) {
            consulations = response.list;
            if (consultView && consulations && [consulations count]) {
//                [consultView reloa];
            }
        }
    }];
}

//MARK: 按钮点击
- (IBAction)productHomeBtnPressed:(id)sender {
    [self showProductHome];
    [self setupHeaderViews];
}

- (IBAction)detailBtnPressed:(id)sender {
    [self showProductDetail];
    [self setupHeaderViews];
}

- (IBAction)commentBtnPressed:(id)sender {
    [self showProductComments];
    [self setupHeaderViews];
}

- (IBAction)showConsultBtnPressed:(id)sender {
    [self showProductConsults];
    [self setupHeaderViews];
}

- (IBAction)newConsultBtnPressed:(id)sender {
    
}

- (IBAction)homePageBtnPressed:(id)sender {
    [self.navigationController popToRootViewControllerAnimated:NO];
    
    UITabBarController *tabController = [Util getMainTabbarController];
    if (tabController) {
        [tabController setSelectedIndex:0];
    }
}

- (IBAction)favoriteBtnPressed:(id)sender {
    
}

- (IBAction)showCartBtnPressed:(id)sender {
    
}

- (IBAction)addCartBtnPressed:(id)sender {
    [self showProductSpecifications];
}

//MARK: ProductMainPageDelegate
- (void)showProductSpecifications {
    if (!specView) {
        CGFloat specWidth = SCREEN_WIDTH;
        specHeight = specWidth * 0.8;
        CGFloat specY = self.view.bounds.size.height - specHeight;
        specView = [[ProductSpecificationView alloc] initWithFrame:CGRectMake(0, specY, specWidth, specHeight)];
        [self.view addSubview:specView];
        [self.view bringSubviewToFront:specView];
        specView.transform = CGAffineTransformTranslate(specView.transform, 0, specHeight + 30);
        specView.delegate = self;
        
        if (detail) {
            [specView setupWithProduct:detail];
        }
    }
    
    [self moveVerticalTranslateView:specView Distance:-specHeight-30];
}

//MARK: ProductSpecificationDelegate
- (void)closeSpecView {
    [self moveVerticalTranslateView:specView Distance:specHeight+30];
}

//MARK: 内部函数
- (void)showProductHome {
    if (currState == 0) {
        return;
    }
    [self hideCurrentViewToUp:NO];
    [self moveVerticalTranslateView:homeView Distance:transHeight];
    
    currState = 0;
}

- (void)showProductDetail {
    if (currState == 1) {
        return;
    }
    BOOL isUp = currState < 1 ? YES : NO;
    [self hideCurrentViewToUp:isUp];
    if (!detailView) {
        detailView = [[ProductDetailView alloc] initWithFrame:self.mainView.bounds];
        [self.mainView addSubview:detailView];
        detailView.transform = CGAffineTransformTranslate(detailView.transform, 0, transHeight);
        
        if (detail) {
            [detailView setupWithProductDetail:detail];
        }
    }
    CGFloat originY = detailView.frame.origin.y;
    CGFloat heigth = originY > 0 ? -transHeight : transHeight;
    [self moveVerticalTranslateView:detailView Distance:heigth];
    
    currState = 1;
}

- (void)showProductComments {
    if (currState == 2) {
        return;
    }
    BOOL isUp = currState < 2 ? YES : NO;
    [self hideCurrentViewToUp:isUp];
    if (!commentView) {
        commentView = [[ProductCommentsView alloc] initWithFrame:self.mainView.bounds];
        [self.mainView addSubview:commentView];
        commentView.transform = CGAffineTransformTranslate(commentView.transform, 0, transHeight);
        
        if (commentList && [commentList count]) {
            [commentView reloadTableDataWith:commentList];
        }
    }
    CGFloat originY = commentView.frame.origin.y;
    CGFloat heigth = originY > 0 ? -transHeight : transHeight;
    [self moveVerticalTranslateView:commentView Distance:heigth];
    
    currState = 2;
}

- (void)showProductConsults {
    if (currState == 3) {
        return;
    }
    [self hideCurrentViewToUp:YES];
    if (!consultView) {
        consultView = [[ProductConsultsView alloc] initWithFrame:self.mainView.bounds];
        [self.mainView addSubview:consultView];
        consultView.transform = CGAffineTransformTranslate(consultView.transform, 0, transHeight);
    }
    [self moveVerticalTranslateView:consultView Distance:-transHeight];
    
    currState = 3;
}

- (void)setupHeaderViews {
    [_homeBtn setTitleColor:[UIColor darkGrayColor] forState:UIControlStateNormal];
    [_detailBtn setTitleColor:[UIColor darkGrayColor] forState:UIControlStateNormal];
    [_commentBtn setTitleColor:[UIColor darkGrayColor] forState:UIControlStateNormal];
    [_consultBtn setTitleColor:[UIColor darkGrayColor] forState:UIControlStateNormal];
    
    switch (currState) {
        case 0:
            [_homeBtn setTitleColor:POSITIVE_COLOR forState:UIControlStateNormal];
            break;
            
        case 1:
            [_detailBtn setTitleColor:POSITIVE_COLOR forState:UIControlStateNormal];
            [_excuteBtn setHidden:YES];
            break;
            
        case 2:
            [_commentBtn setTitleColor:POSITIVE_COLOR forState:UIControlStateNormal];
            [_excuteBtn setHidden:YES];
            break;
            
        case 3:
            [_consultBtn setTitleColor:POSITIVE_COLOR forState:UIControlStateNormal];
            [_excuteBtn setHidden:NO];
            break;
            
        default:
            break;
    }
    
    [_excuteBtn setHidden:(currState != 3)];
}

//点击不同界面后，隐藏当前界面 toUp:YES 向上隐藏； toUp：NO 向下隐藏
- (void)hideCurrentViewToUp:(BOOL)toUp {
    CGFloat heigth = toUp ? -transHeight : transHeight;
    switch (currState) {
        case 0:
            [self moveVerticalTranslateView:homeView Distance:heigth];
            break;
        case 1:
            [self moveVerticalTranslateView:detailView Distance:heigth];
            break;
        case 2:
            [self moveVerticalTranslateView:commentView Distance:heigth];
            break;
        case 3:
            [self moveVerticalTranslateView:consultView Distance:heigth];
            break;
            
        default:
            break;
    }
}

- (void)moveVerticalTranslateView:(UIView *)view Distance:(CGFloat)distance {
    [UIView animateWithDuration:0.3 delay:0 options:UIViewAnimationOptionCurveEaseIn animations:^{
        view.transform = CGAffineTransformTranslate(view.transform, 0, distance);
    } completion:nil];
}

@end
